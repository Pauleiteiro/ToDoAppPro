<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/database/dbManager.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/database/dbManager.py" />
              <option name="originalContent" value="import sqlite3&#10;&#10;class DBManager:&#10;    def __init__(self, dbName = &quot;tasks.db&quot;):&#10;&#10;        self.connection = sqlite3.connect(dbName)&#10;&#10;        self.createTable()&#10;&#10;    def createTable(self):&#10;        cursor = self.connection.cursor()&#10;        cursor.execute(&quot;&quot;&quot;CREATE TABLE IF NOT EXISTS tasks (&#10;            id INTEGER PRIMARY KEY AUTOINCREMENT,&#10;            title TEXT NOT NULL,&#10;            description TEXT,&#10;            completed BOOLEAN,,&#10;            startDate TEXT,&#10;            dueDate TEXT&#10;        )&quot;&quot;&quot;)&#10;        self.connection.commit()&#10;&#10;    def addTask(self, task):&#10;        cursor = self.connection.cursor()&#10;        cursor.execute(&quot;&quot;&quot;INSERT INTO tasks (title, description, completed, startDate, dueDate)&#10;        VALUES (?, ?, ?, ?, ?)&quot;&quot;&quot;, (task.title, task.description, bool(task.completed), task.startDate, task.dueDate))&#10;        self.connection.commit()&#10;&#10;&#10;    def removeTask(self, title):&#10;        cursor = self.connection.cursor()&#10;        cursor.execute(&quot;DELETE FROM tasks WHERE title = ?&quot;, (title,))&#10;        self.connection.commit()&#10;&#10;&#10;    def loadTasks(self):&#10;        cursor = self.connection.cursor()&#10;        cursor.execute(&quot;SELECT title,description,completed,startDate,dueDate FROM tasks&quot;)&#10;        rows = cursor.fetchall()&#10;        return rows&#10;" />
              <option name="updatedContent" value="import sqlite3&#10;&#10;class DBManager:&#10;    def __init__(self, dbName = &quot;tasks.db&quot;):&#10;&#10;        self.connection = sqlite3.connect(dbName)&#10;&#10;        self.createTable()&#10;&#10;    def createTable(self):&#10;        cursor = self.connection.cursor()&#10;        cursor.execute(&quot;&quot;&quot;&#10;            CREATE TABLE IF NOT EXISTS tasks (&#10;                id INTEGER PRIMARY KEY AUTOINCREMENT,&#10;                title TEXT NOT NULL,&#10;                description TEXT,&#10;                completed INTEGER,&#10;                startDate TEXT,&#10;                dueDate TEXT&#10;            )&#10;        &quot;&quot;&quot;)&#10;        self.connection.commit()&#10;&#10;    def addTask(self, task):&#10;        cursor = self.connection.cursor()&#10;        cursor.execute(&quot;&quot;&quot;INSERT INTO tasks (title, description, completed, startDate, dueDate)&#10;        VALUES (?, ?, ?, ?, ?)&quot;&quot;&quot;, (task.title, task.description, bool(task.completed), task.startDate, task.dueDate))&#10;        self.connection.commit()&#10;&#10;&#10;    def removeTask(self, title):&#10;        cursor = self.connection.cursor()&#10;        cursor.execute(&quot;DELETE FROM tasks WHERE title = ?&quot;, (title,))&#10;        self.connection.commit()&#10;&#10;&#10;    def loadTasks(self):&#10;        cursor = self.connection.cursor()&#10;        cursor.execute(&quot;SELECT title,description,completed,startDate,dueDate FROM tasks&quot;)&#10;        rows = cursor.fetchall()&#10;        return rows" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>